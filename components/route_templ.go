// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Route(route string, segments []Segment) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div style=\"width: inherit;\"><h1 class=\"text-lg font-bold tracking-tight text-center text-gray-900 dark:text-gray-400 sm:text-xl mb-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(route)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/route.templ`, Line: 6, Col: 10}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</h1><video id=\"my_video_1\" class=\"video-js rounded-lg mx-auto mb-4\" width=\"526\" height=\"330\" style=\"width:526px;height:330px;\" controls><source src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs("/playlist/" + route + ".m3u8")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/route.templ`, Line: 9, Col: 47}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" type=\"application/x-mpegURL\"></video><div id=\"map\" class=\"w-full\" style=\"height:400px\"></div><div class=\"flow-root w-full mt-4 mb-4\"><div class=\"overflow-x-auto\"><div class=\"inline-block min-w-full align-middle\"><div class=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 sm:rounded-lg w-full\"><table class=\"min-w-full divide-y divide-black\"><thead class=\"bg-gray-200 dark:bg-slate-900\"><tr><th scope=\"col\" class=\"px-3 py-3.5 text-left font-semibold text-slate-600 dark:text-gray-400\">Distance</th><th scope=\"col\" class=\"px-3 py-3.5 text-left font-semibold text-slate-600 dark:text-gray-400\">Average Speed</th><th scope=\"col\" class=\"px-3 py-3.5 text-left font-semibold text-slate-600 dark:text-gray-400\">Max Speed</th><th scope=\"col\" class=\"px-3 py-3.5 text-left font-semibold text-slate-600 dark:text-gray-400\">Min Elevation</th><th scope=\"col\" class=\"px-3 py-3.5 text-left font-semibold text-slate-600 dark:text-gray-400\">Max Elevation</th></tr></thead> <tbody class=\"divide-y divide-slate-900 bg-gray-50 dark:bg-slate-700\"><tr><td id=\"distance\" class=\"break-all px-3 py-4 text-slate-600 dark:text-gray-300\"></td><td id=\"avg_speed\" class=\"break-all px-3 py-4 text-slate-600 dark:text-gray-300\"></td><td id=\"max_speed\" class=\"break-all px-3 py-4 text-slate-600 dark:text-gray-300\"></td><td id=\"min_elevation\" class=\"break-all px-3 py-4 text-slate-600 dark:text-gray-300\"></td><td id=\"max_elevation\" class=\"break-all px-3 py-4 text-slate-600 dark:text-gray-300\"></td></tr></tbody></table></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = segmentsTable(segments).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = hls().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = gpx(route).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func hls() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_hls_60de`,
		Function: `function __templ_hls_60de(){elt = document.getElementById("my_video_1");
  var hls = new Hls();
  hls.loadSource(elt.children[0].src);
  hls.attachMedia(elt);
}`,
		Call:       templ.SafeScript(`__templ_hls_60de`),
		CallInline: templ.SafeScriptInline(`__templ_hls_60de`),
	}
}

func gpx(route string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_gpx_7ea4`,
		Function: `function __templ_gpx_7ea4(route){function display_gpx(elt) {
    if (!elt) return;

    var url = "/gpx/qlog/" + route + ".gpx";

    function _t(t) { return elt.getElementsByTagName(t)[0]; }
    function _c(c) { return elt.getElementsByClassName(c)[0]; }

    var map = L.map('map');
    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: 'Map data &copy; <a href="http://www.osm.org">OpenStreetMap</a>'
    }).addTo(map);

    var control = L.control.layers(null, null).addTo(map);

    new L.GPX(url, {
      async: true,
      marker_options: {
        startIconUrl: '/static/pin-icon-start.png',
        endIconUrl:   '/static/pin-icon-end.png',
        shadowUrl:    '/static/pin-shadow.png',
      },
    }).on('loaded', function(e) {
      var gpx = e.target;
      map.fitBounds(gpx.getBounds());
      document.getElementById("distance").innerText = gpx.get_distance_imp().toFixed(2) + " miles"
      document.getElementById("avg_speed").innerText = gpx.get_moving_speed_imp().toFixed(1) + " mph"
      document.getElementById("max_speed").innerText = gpx.get_speed_max_imp().toFixed(1) + " mph"
      document.getElementById("min_elevation").innerText = gpx.get_elevation_min_imp().toFixed(0) + "'"
      document.getElementById("max_elevation").innerText = gpx.get_elevation_max_imp().toFixed(0) + "'"
    }).addTo(map);
  }
  display_gpx(document.getElementById('map'));
}`,
		Call:       templ.SafeScript(`__templ_gpx_7ea4`, route),
		CallInline: templ.SafeScriptInline(`__templ_gpx_7ea4`, route),
	}
}
